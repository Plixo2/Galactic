import * Core

import @java List java.util.List
import @java String java.lang.String
import @java Function java.util.function.Function
import @java Boolean java.lang.Boolean
import @java System java.lang.System


fn test() = {
    var list = new java.util.ArrayList {}
    list.add("Hello")
    list.add(" ")
    list.add("World")
    list.add("!")
    var names: List = list.map(new UpperCase).filterEmpty()
    System.out.println(names)
}

fn filterEmpty() -> List extends List = {
    this.stream().filter(new EmptyFilter).toList()
}

class EmptyFilter implements java.util.function.Predicate {
    fn test(t: java.lang.Object) -> boolean = {
        (t as String).isBlank().not()
    }
}


class UpperCase implements Function {
    fn apply(t: java.lang.Object) -> java.lang.Object = {
        (t as String).toUpperCase()
    }
}