import * Core

import @java Text java.lang.String

class Base {
    fn create() -> Base = {
       var hello = new Better { "Bye" }
       hello.name = "hello"
       hello
    }
    fn print() -> void = {
        println("Hello world")
    }
    fn contains(name: Text) -> boolean = if this is Better { (this as Better).name.equals(name) } else false
}
class Better extends Base {
    name: Text
    fn print() -> void = {
        println(this.name)
    }
}
class Implementor {
    name: Text
    fn main() -> Better = {
        var hello = new Better { "is it?" }
        hello.name = this.name
        var j: Text = "Byte"
        if hello.contains("cast") {
            hello.create()
            j as java.lang.Object as Better
        } else {
            hello.create() as Better
        }
    }
}
