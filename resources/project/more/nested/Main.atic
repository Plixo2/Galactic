use more.Level.*

#Native("java.util.ArrayList")
struct List<T> {
    forEach: fn(fn(T) -> void) -> void = fn(a) {

    }
    #NativeMethod("get")
    get: fn(int) -> T
}




main := fn(arg: string) {
    let c: bool = if true => "true" else => "false"; .println(0)
    //let list = List();
    //let s = list.get: 0
    //list.forEach: fn(c) {
    //    let w = c + 100
    //}
    //if true => 100 else => 200
    //let value: int = if list.map: fn(ref) ref * 2; .any: fn (ref) ref > 16 => 100 else => 200
    //let s_ = list.get: 0
}
println := fn[string](msg: string, count: int) -> bool {
    return len(self) > 0;
}

len := fn(string: string) -> int 0